{"ast":null,"code":"import { firebase } from './index';\nexport const authMethods = {\n  signin: (email, password, setErrors, setToken) => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(async res => {\n      await localStorage.setItem('tokenId', res.user.Aa);\n      const token = await Object.entries(res.user.refreshToken);\n      await localStorage.setItem('token', token);\n      setToken(window.localStorage.token);\n      //window.location.replace('/overview/dashboard');\n      //history.push('/overview/dashboard')\n    }).catch(err => {\n      //let history = useHistory();\n      setErrors(prev => [...prev, err.message]);\n      //history.push('/overview/dashboard')\n    });\n  },\n\n  signup: (email, password, setErrors, setToken) => {\n    firebase.auth().signUpWithEmailAndPassword(email, password).then(async res => {\n      console.log(res);\n      // await localStorage.setItem('tokenId', res.user.Aa);\n      // const token = await Object.entries(res.user.refreshToken);\n      // await localStorage.setItem('token', token);\n      // setToken(window.localStorage.token);\n      //window.location.replace('/overview/dashboard');\n      //history.push('/overview/dashboard')\n    }).catch(err => {\n      //let history = useHistory();\n      setErrors(prev => [...prev, err.message]);\n      //history.push('/overview/dashboard')\n    });\n  },\n\n  signout: (setErrors, setToken) => {\n    firebase.auth().signOut().then(res => {\n      localStorage.removeItem('token');\n      setToken(null);\n    }).catch(err => {\n      setErrors(prev => [...prev, err.message]);\n      localStorage.removeItem('token');\n      setToken(null);\n      console.error(err.message);\n    });\n  }\n};","map":{"version":3,"names":["firebase","authMethods","signin","email","password","setErrors","setToken","auth","signInWithEmailAndPassword","then","res","localStorage","setItem","user","Aa","token","Object","entries","refreshToken","window","catch","err","prev","message","signup","signUpWithEmailAndPassword","console","log","signout","signOut","removeItem","error"],"sources":["/Users/simranjeet.dev/Documents/Simranjeet_Upwork/src/firebase/authMethods.js"],"sourcesContent":["import { firebase } from './index';\r\n\r\nexport const authMethods = {\r\n    signin: (email, password, setErrors, setToken) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async (res) => {\r\n                await localStorage.setItem('tokenId', res.user.Aa);\r\n                const token = await Object.entries(res.user.refreshToken);\r\n                await localStorage.setItem('token', token);\r\n                setToken(window.localStorage.token);\r\n                //window.location.replace('/overview/dashboard');\r\n                //history.push('/overview/dashboard')\r\n            })\r\n            .catch((err) => {\r\n                //let history = useHistory();\r\n                setErrors((prev) => [...prev, err.message]);\r\n                //history.push('/overview/dashboard')\r\n            });\r\n    },\r\n\r\n    signup: (email, password, setErrors, setToken) => {\r\n        firebase\r\n            .auth()\r\n            .signUpWithEmailAndPassword(email, password)\r\n            .then(async (res) => {\r\n                console.log(res);\r\n                // await localStorage.setItem('tokenId', res.user.Aa);\r\n                // const token = await Object.entries(res.user.refreshToken);\r\n                // await localStorage.setItem('token', token);\r\n                // setToken(window.localStorage.token);\r\n                //window.location.replace('/overview/dashboard');\r\n                //history.push('/overview/dashboard')\r\n            })\r\n            .catch((err) => {\r\n                //let history = useHistory();\r\n                setErrors((prev) => [...prev, err.message]);\r\n                //history.push('/overview/dashboard')\r\n            });\r\n    },\r\n\r\n    signout: (setErrors, setToken) => {\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then((res) => {\r\n                localStorage.removeItem('token');\r\n                setToken(null);\r\n            })\r\n            .catch((err) => {\r\n                setErrors((prev) => [...prev, err.message]);\r\n                localStorage.removeItem('token');\r\n                setToken(null);\r\n                console.error(err.message);\r\n            });\r\n    },\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,SAAS;AAElC,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAE,CAACC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IAC9CN,QAAQ,CACHO,IAAI,EAAE,CACNC,0BAA0B,CAACL,KAAK,EAAEC,QAAQ,CAAC,CAC3CK,IAAI,CAAC,MAAOC,GAAG,IAAK;MACjB,MAAMC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEF,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC;MAClD,MAAMC,KAAK,GAAG,MAAMC,MAAM,CAACC,OAAO,CAACP,GAAG,CAACG,IAAI,CAACK,YAAY,CAAC;MACzD,MAAMP,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEG,KAAK,CAAC;MAC1CT,QAAQ,CAACa,MAAM,CAACR,YAAY,CAACI,KAAK,CAAC;MACnC;MACA;IACJ,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;MACZ;MACAhB,SAAS,CAAEiB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,GAAG,CAACE,OAAO,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC;EACV,CAAC;;EAEDC,MAAM,EAAE,CAACrB,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IAC9CN,QAAQ,CACHO,IAAI,EAAE,CACNkB,0BAA0B,CAACtB,KAAK,EAAEC,QAAQ,CAAC,CAC3CK,IAAI,CAAC,MAAOC,GAAG,IAAK;MACjBgB,OAAO,CAACC,GAAG,CAACjB,GAAG,CAAC;MAChB;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IAAK;MACZ;MACAhB,SAAS,CAAEiB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,GAAG,CAACE,OAAO,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC;EACV,CAAC;;EAEDK,OAAO,EAAE,CAACvB,SAAS,EAAEC,QAAQ,KAAK;IAC9BN,QAAQ,CACHO,IAAI,EAAE,CACNsB,OAAO,EAAE,CACTpB,IAAI,CAAEC,GAAG,IAAK;MACXC,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChCxB,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDc,KAAK,CAAEC,GAAG,IAAK;MACZhB,SAAS,CAAEiB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,GAAG,CAACE,OAAO,CAAC,CAAC;MAC3CZ,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChCxB,QAAQ,CAAC,IAAI,CAAC;MACdoB,OAAO,CAACK,KAAK,CAACV,GAAG,CAACE,OAAO,CAAC;IAC9B,CAAC,CAAC;EACV;AACJ,CAAC"},"metadata":{},"sourceType":"module"}