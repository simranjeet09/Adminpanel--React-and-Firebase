{"ast":null,"code":"var _jsxFileName = \"/Users/simranjeet.dev/Documents/Simranjeet_Upwork/src/pages/WeatherPage/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport axios from 'axios';\nimport Activities from '../../components/Activities';\nimport Grid from '@material-ui/core/Grid';\nimport LoadingSpinner from '../../components/loader/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherPage = () => {\n  _s();\n  const [getWeatherDetails, setWeatherDetails] = useState(null);\n  const [loading, isLoading] = useState(true);\n  useEffect(() => {\n    axios.get('https://weatherdbi.herokuapp.com/data/weather/Canada').then(res => {\n      if (res && res.data) {\n        setWeatherDetails(res.data);\n        isLoading(false);\n      }\n    });\n  }, []);\n\n  // useEffect(() => {\n  //     const data = axios\n  //         .get(\n  //             `https://api.openweathermap.org/data/2.5/weather?lat=10&lon=78&units=metric&appid=7827823101d2b73da072f3788992569f`\n  //         )\n  //         .then((res) => {\n  //             console.log('res', res);\n  //             if (res && res.data) {\n  //                 setWeatherDetails(res.data);\n  //             }\n  //         });\n  // }, []);\n\n  return loading ? LoadingSpinner() : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), getWeatherDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: getWeatherDetails.region\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current Condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Activities, {\n            title: \"Comment\",\n            value: getWeatherDetails.currentConditions.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Activities, {\n            title: \"Dayhour\",\n            value: getWeatherDetails.currentConditions.dayhour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Activities, {\n            title: \"Humidity\",\n            value: getWeatherDetails.currentConditions.humidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Activities, {\n            title: \"Precipitation\",\n            value: getWeatherDetails.currentConditions.precip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Activities, {\n            title: \"Now\",\n            imageUrl: getWeatherDetails.currentConditions.iconURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 34\n  }, this);\n};\n_s(WeatherPage, \"g4BGUHkfk9CgsTw13JT8DzC6ihE=\");\n_c = WeatherPage;\nexport default WeatherPage;\nvar _c;\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","axios","Activities","Grid","LoadingSpinner","WeatherPage","getWeatherDetails","setWeatherDetails","loading","isLoading","get","then","res","data","region","currentConditions","comment","dayhour","humidity","precip","iconURL"],"sources":["/Users/simranjeet.dev/Documents/Simranjeet_Upwork/src/pages/WeatherPage/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport axios from 'axios';\nimport Activities from '../../components/Activities';\nimport Grid from '@material-ui/core/Grid';\nimport LoadingSpinner from '../../components/loader/loader';\n\nconst WeatherPage = () => {\n    const [getWeatherDetails, setWeatherDetails] = useState(null);\n    const [loading,isLoading]=useState(true)\n\n    useEffect(() => {\n        axios\n            .get('https://weatherdbi.herokuapp.com/data/weather/Canada')\n            .then((res) => {\n                if (res && res.data) {\n                    setWeatherDetails(res.data);\n                    isLoading(false);\n                }\n            });\n    }, []);\n\n    // useEffect(() => {\n    //     const data = axios\n    //         .get(\n    //             `https://api.openweathermap.org/data/2.5/weather?lat=10&lon=78&units=metric&appid=7827823101d2b73da072f3788992569f`\n    //         )\n    //         .then((res) => {\n    //             console.log('res', res);\n    //             if (res && res.data) {\n    //                 setWeatherDetails(res.data);\n    //             }\n    //         });\n    // }, []);\n\n    return (\n        loading?LoadingSpinner():<div>\n            <Header title=\"Weather\" />\n            {/* {getWeatherDetails && (\n                <div>\n                    <h2>{getWeatherDetails.name}</h2>\n                    <p>Current Condition</p>\n                    <p> dayhour : {getWeatherDetails.main.temp}</p>\n                    <p>humidity : {getWeatherDetails.main.humidity}</p>\n                    <p> precip : {getWeatherDetails.main.pressure}</p>\n                </div>\n            )} */}\n            {getWeatherDetails && (\n                <div>\n                    <h2>{getWeatherDetails.region}</h2>\n                    <p>Current Condition</p>\n\n                    <Grid container spacing={3}>\n                        <Grid item sm={12} md={3} lg={3}>\n                            <Activities\n                                title=\"Comment\"\n                                value={\n                                    getWeatherDetails.currentConditions.comment\n                                }\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={3} lg={3}>\n                            <Activities\n                                title=\"Dayhour\"\n                                value={\n                                    getWeatherDetails.currentConditions.dayhour\n                                }\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={3} lg={3}>\n                            <Activities\n                                title=\"Humidity\"\n                                value={\n                                    getWeatherDetails.currentConditions.humidity\n                                }\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={3} lg={3}>\n                            <Activities\n                                title=\"Precipitation\"\n                                value={\n                                    getWeatherDetails.currentConditions.precip\n                                }\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={12} lg={12}>\n                            <Activities\n                                title=\"Now\"\n                                imageUrl={\n                                    getWeatherDetails.currentConditions.iconURL\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default WeatherPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}