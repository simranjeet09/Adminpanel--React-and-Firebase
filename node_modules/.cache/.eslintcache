[{"/Users/simranjeet.dev/Documents/Adminpanel/src/index.js":"1","/Users/simranjeet.dev/Documents/Adminpanel/src/reportWebVitals.js":"2","/Users/simranjeet.dev/Documents/Adminpanel/src/routes/index.js":"3","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/SignUpPage/index.js":"4","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/NotFoundPage/index.js":"5","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/index.js":"6","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/LoginPage/Login.js":"7","/Users/simranjeet.dev/Documents/Adminpanel/src/providers/AuthProvider.js":"8","/Users/simranjeet.dev/Documents/Adminpanel/src/utility/validations/login.js":"9","/Users/simranjeet.dev/Documents/Adminpanel/src/firebase/authMethods.js":"10","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/Overview/DashboardPage/Dashboard.js":"11","/Users/simranjeet.dev/Documents/Adminpanel/src/firebase/index.js":"12","/Users/simranjeet.dev/Documents/Adminpanel/src/components/Buttons/index.js":"13","/Users/simranjeet.dev/Documents/Adminpanel/src/components/WindowDimensions/index.js":"14","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/NewsPage/index.js":"15","/Users/simranjeet.dev/Documents/Adminpanel/src/components/WindowPathname/index.js":"16","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/WeatherPage/index.js":"17","/Users/simranjeet.dev/Documents/Adminpanel/src/components/SideBar/index.js":"18","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/UsersPage/index.js":"19","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/StockPage/index.js":"20","/Users/simranjeet.dev/Documents/Adminpanel/src/components/Activities/index.js":"21","/Users/simranjeet.dev/Documents/Adminpanel/src/components/Header/index.js":"22","/Users/simranjeet.dev/Documents/Adminpanel/src/components/loader/loader.jsx":"23","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/TodoForm.js":"24","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/useInputState.js":"25","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/index.js":"26","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/useTodoState.js":"27","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/TodoList.js":"28"},{"size":702,"mtime":1668754973000,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1655875824000,"results":"31","hashOfConfig":"30"},{"size":1770,"mtime":1668818216678,"results":"32","hashOfConfig":"30"},{"size":14630,"mtime":1668816162598,"results":"33","hashOfConfig":"30"},{"size":762,"mtime":1668815661069,"results":"34","hashOfConfig":"30"},{"size":5633,"mtime":1668818241402,"results":"35","hashOfConfig":"30"},{"size":12795,"mtime":1668815658999,"results":"36","hashOfConfig":"30"},{"size":1283,"mtime":1668811548040,"results":"37","hashOfConfig":"30"},{"size":480,"mtime":1655875824000,"results":"38","hashOfConfig":"30"},{"size":2221,"mtime":1668815657313,"results":"39","hashOfConfig":"30"},{"size":3959,"mtime":1668815671919,"results":"40","hashOfConfig":"30"},{"size":609,"mtime":1668805696285,"results":"41","hashOfConfig":"30"},{"size":6766,"mtime":1668754330000,"results":"42","hashOfConfig":"30"},{"size":604,"mtime":1655875822000,"results":"43","hashOfConfig":"30"},{"size":2143,"mtime":1668815662902,"results":"44","hashOfConfig":"30"},{"size":534,"mtime":1655875822000,"results":"45","hashOfConfig":"30"},{"size":3495,"mtime":1668815488164,"results":"46","hashOfConfig":"30"},{"size":2356,"mtime":1668814782152,"results":"47","hashOfConfig":"30"},{"size":2505,"mtime":1668815489731,"results":"48","hashOfConfig":"30"},{"size":2353,"mtime":1668815489089,"results":"49","hashOfConfig":"30"},{"size":713,"mtime":1668779712000,"results":"50","hashOfConfig":"30"},{"size":1832,"mtime":1668814780861,"results":"51","hashOfConfig":"30"},{"size":253,"mtime":1668811458191,"results":"52","hashOfConfig":"30"},{"size":561,"mtime":1668818310879,"results":"53","hashOfConfig":"30"},{"size":229,"mtime":1545259600000,"results":"54","hashOfConfig":"30"},{"size":935,"mtime":1668818360895,"results":"55","hashOfConfig":"30"},{"size":359,"mtime":1545259600000,"results":"56","hashOfConfig":"30"},{"size":979,"mtime":1545259600000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o2gae5",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simranjeet.dev/Documents/Adminpanel/src/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/reportWebVitals.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/routes/index.js",["127","128"],"import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport HomePage from './../pages/index';\r\nimport NotFoundPage from './../pages/NotFoundPage/index.js';\r\nimport LoginPage from '../pages/LoginPage/Login';\r\nimport SignUpPage from '../pages/SignUpPage/index.js';\r\nimport AuthProvider from './../providers/AuthProvider';\r\nimport TodoForm from '../pages/todo/TodoForm';\r\nimport TodoApp from '../pages/todo';\r\n// Every Route and component does require either Private or Public Route creation.\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <AuthProvider>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={LoginPage} />\r\n                    <Route exact path=\"/login\" component={LoginPage} />\r\n                    <Route exact path=\"/sign-up\" component={SignUpPage} />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/overview/dashboard\"\r\n                        component={HomePage}\r\n                    />\r\n                    <Route exact path=\"/overview/users\" component={HomePage} />\r\n                    <Route exact path=\"/overview/todo\" component={HomePage} />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/overview/weather\"\r\n                        component={HomePage}\r\n                    />\r\n                    <Route exact path=\"/overview/news\" component={HomePage} />\r\n                    <Route exact path=\"/overview/stock\" component={HomePage} />\r\n                    <Route component={NotFoundPage} />\r\n                </Switch>\r\n            </AuthProvider>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/SignUpPage/index.js",["129","130","131","132","133","134","135"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport validateLoginForm from './../../utility/validations/login';\r\nimport CustomButton from './../../components/Buttons';\r\nimport useWindowDimensions from './../../components/WindowDimensions';\r\nimport { firebaseAuth } from './../../providers/AuthProvider';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { firebase } from './../../firebase';\r\nimport {\r\n    getAuth,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n} from 'firebase/auth';\r\n\r\nconst CustomCheckbox = withStyles({\r\n    root: {\r\n        color: '#F0F3F8',\r\n        borderRadius: '2px',\r\n        backgroundColor: '#fff',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        },\r\n        '& .MuiIconButton-root.Mui-hover': {\r\n            backgroundColor: '#fff',\r\n            '&:hover': {\r\n                backgroundColor: '#fff',\r\n            },\r\n        },\r\n        '&$checked': {\r\n            color: '#F9BB4B',\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" disabled {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textInputCls: {\r\n        width: '100%',\r\n        margin: '20px 0px',\r\n        '& .MuiOutlinedInput-root': {\r\n            borderColor: '#F0F3F8',\r\n            borderWidth: '2px',\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#F9BB4B',\r\n                borderWidth: '2px',\r\n            },\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: '#F9BB4B',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SignUpPage = () => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n //hook to hide show password\r\n    const [showPassword, setShowPassword] = useState(false);\r\n     //hook to set input fields details\r\n\r\n    const [loginDetails, setLoginDetails] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n         //hook to set errors\r\n\r\n    const [errorsValid, setErrors] = useState({});\r\n    const { height, width } = useWindowDimensions();\r\n            \r\n    //hook to responsive\r\n    const [toggleMobile, setToggleMobile] = useState(false);\r\n    const { handleSignup, inputs, setInputs, errors, token } =\r\n        useContext(firebaseAuth);\r\n    const [toggleCheck, setToggleCheck] = React.useState({ rememberMe: true });\r\n\r\n    const handleChangeRemember = (event) => {\r\n        setToggleCheck({\r\n            ...toggleCheck,\r\n            [event.target.name]: event.target.checked,\r\n        });\r\n    };\r\n    //hook to handle text change in input fields\r\n    const handleChange = (event) => {\r\n        setLoginDetails((loginDetails) => ({\r\n            ...loginDetails,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n        const { name, value } = event.target;\r\n        setInputs((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    //submit button click handeling \r\n\r\n    const submitLogin = (event) => {\r\n        event.preventDefault();\r\n        console.log('loginDetails', loginDetails);\r\n       \r\n        //if (Object.keys(validateLoginForm(loginDetails)).length === 0) {\r\n        //handleSignup();\r\n        const authentication = getAuth();\r\n        createUserWithEmailAndPassword(\r\n            authentication,\r\n            loginDetails.email,\r\n            loginDetails.password\r\n        )\r\n            .then((response) => {\r\n                var db = firebase.firestore()\r\n                db.collection(\"/users\").add({\r\n                    uid: JSON.stringify(response),\r\n                    fullname: loginDetails.fullname,\r\n                    email: loginDetails.email,\r\n                    \r\n                })\r\n                .then((docRef) => {\r\n                   console.log(\"saved\")\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error adding document: \", error);\r\n                });\r\n\r\n                alert('User registered. Please login now');\r\n\r\n                history.push('/');\r\n                sessionStorage.setItem(\r\n                    'token',\r\n                    response._tokenResponse.refreshToken\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.log('error', error);\r\n                alert('Email Already in Use');\r\n            });\r\n        //}\r\n        // else {\r\n        //setErrors(validateLoginForm(loginDetails));\r\n        //}\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleClickClear = () => {\r\n        setLoginDetails((loginDetails) => ({\r\n            ...loginDetails,\r\n            email: '',\r\n        }));\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (token !== null && token) {\r\n    //         history.push('/overview/dashboard');\r\n    //     } else if (token === null) {\r\n    //         history.push('/');\r\n    //     }\r\n    // }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (width <= 576) {\r\n            setToggleMobile(true);\r\n        } else {\r\n            setToggleMobile(false);\r\n        }\r\n    }, [width, height]);\r\n\r\n    console.log('errors', errors);\r\n\r\n    return (\r\n        <div className=\"loginContentCls\">\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                alignItems=\"center\"\r\n                className=\"height100Vh\"\r\n            >\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    lg={6}\r\n                    className=\"leftSideContent padding-t-200\"\r\n                >\r\n                    <img\r\n                        src=\"/assets/images/left_landing_page.svg\"\r\n                        alt=\"Limor Logo\"\r\n                        width=\"100%\"\r\n                    />\r\n                    <br />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                    <div className=\"rightFormContent\">\r\n                        <p className=\"text-24 fw-600\">Sign Up</p>\r\n                        <p className=\"margin-t-0 text-grey\">\r\n                            Enter your Name, email address and password\r\n                        </p>\r\n                        <TextField\r\n                            name=\"fullname\"\r\n                            id=\"outlined-error\"\r\n                            label=\"Enter Name\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"John Doe\"\r\n                            className={classes.textInputCls}\r\n                            onChange={handleChange}\r\n                            value={loginDetails.fullname}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickClear}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {loginDetails.email ? (\r\n                                                <img\r\n                                                    src=\"/assets/icons/text-field-close.svg\"\r\n                                                    alt=\"Close\"\r\n                                                />\r\n                                            ) : null}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            error={errorsValid.email ? true : false}\r\n                            name=\"email\"\r\n                            id=\"outlined-error\"\r\n                            label=\"Enter Email Address\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"doe@gmail.com\"\r\n                            className={classes.textInputCls}\r\n                            onChange={handleChange}\r\n                            value={loginDetails.email}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickClear}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {loginDetails.email ? (\r\n                                                <img\r\n                                                    src=\"/assets/icons/text-field-close.svg\"\r\n                                                    alt=\"Close\"\r\n                                                />\r\n                                            ) : null}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <div className=\"errorText text-12 float-left\">\r\n                            {errorsValid.email && errorsValid.email}\r\n                        </div>\r\n                        <TextField\r\n                            error={errorsValid.password ? true : false}\r\n                            label=\"Enter Password\"\r\n                            id=\"outlined-adornment-password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            name=\"password\"\r\n                            variant=\"outlined\"\r\n                            value={loginDetails.password}\r\n                            className={classes.textInputCls}\r\n                            onChange={handleChange}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? (\r\n                                                <img\r\n                                                    src=\"/assets/icons/eye.svg\"\r\n                                                    alt=\"Show\"\r\n                                                />\r\n                                            ) : (\r\n                                                <img\r\n                                                    src=\"/assets/icons/eye-slash.svg\"\r\n                                                    alt=\"Show\"\r\n                                                />\r\n                                            )}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <div className=\"errorText text-12 float-left\">\r\n                            {errorsValid.password && errorsValid.password}\r\n                        </div>\r\n                        <Grid container spacing={0}>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <CustomCheckbox\r\n                                            checked={toggleCheck.rememberMe}\r\n                                            onChange={handleChangeRemember}\r\n                                            name=\"rememberMe\"\r\n                                            iconStyle={{ fill: 'black' }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Remember Me\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6}></Grid>\r\n                        </Grid>\r\n                        <div className=\"margin-t-30\">\r\n                            <CustomButton\r\n                                btntype={\r\n                                    loginDetails.email && loginDetails.password\r\n                                        ? 'primaryBtn'\r\n                                        : 'disableBtn'\r\n                                }\r\n                                disabled={\r\n                                    loginDetails.email && loginDetails.password\r\n                                        ? false\r\n                                        : true\r\n                                }\r\n                                width=\"100%\"\r\n                                onClick={submitLogin}\r\n                            >\r\n                                Continue\r\n                            </CustomButton>\r\n                            <div className=\"text-center margin-tb-20\">\r\n                                <Link\r\n                                    to=\"/\"\r\n                                    className=\"cursor-pointer margin-t-10 text-primary\"\r\n                                >\r\n                                    Click here to Sign In !\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        {errors.length > 0\r\n                            ? errors.map((error) => (\r\n                                  <p className=\"text-red text-center\">\r\n                                      {error}\r\n                                  </p>\r\n                              ))\r\n                            : null}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpPage;\r\n","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/NotFoundPage/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/pages/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/pages/LoginPage/Login.js",["136","137","138","139","140","141"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport validateLoginForm from './../../utility/validations/login';\r\nimport CustomButton from './../../components/Buttons';\r\nimport useWindowDimensions from './../../components/WindowDimensions';\r\nimport { firebaseAuth } from './../../providers/AuthProvider';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { firebase } from './../../firebase';\r\nimport {\r\n    getAuth,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n} from 'firebase/auth';\r\n\r\nconst CustomCheckbox = withStyles({\r\n    root: {\r\n        color: '#F0F3F8',\r\n        borderRadius: '2px',\r\n        backgroundColor: '#fff',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        },\r\n        '& .MuiIconButton-root.Mui-hover': {\r\n            backgroundColor: '#fff',\r\n            '&:hover': {\r\n                backgroundColor: '#fff',\r\n            },\r\n        },\r\n        '&$checked': {\r\n            color: '#F9BB4B',\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" disabled {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textInputCls: {\r\n        width: '100%',\r\n        margin: '20px 0px',\r\n        '& .MuiOutlinedInput-root': {\r\n            borderColor: '#F0F3F8',\r\n            borderWidth: '2px',\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#F9BB4B',\r\n                borderWidth: '2px',\r\n            },\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: '#F9BB4B',\r\n        },\r\n    },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    //hook for password hide/show\r\n    const [showPassword, setShowPassword] = useState(false);\r\n     //hook for setting user details from input\r\n    const [loginDetails, setLoginDetails] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    //hook to handle error \r\n    const [errorsValid, setErrors] = useState({});\r\n    const { height, width } = useWindowDimensions();\r\n    //hook to handle reponsive design \r\n    const [toggleMobile, setToggleMobile] = useState(false);\r\n    const { handleSignin, inputs, setInputs, errors, token } =\r\n        useContext(firebaseAuth);\r\n    //hook to handle remember me \r\n    const [toggleCheck, setToggleCheck] = React.useState({ rememberMe: true });\r\n    \r\n    const handleChangeRemember = (event) => {\r\n        setToggleCheck({\r\n            ...toggleCheck,\r\n            [event.target.name]: event.target.checked,\r\n        });\r\n    };\r\n\r\n    //handle text change in text fields and set email & password to loginDetails object\r\n    const handleChange = (event) => {\r\n        setLoginDetails((loginDetails) => ({\r\n            ...loginDetails,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n        const { name, value } = event.target;\r\n        setInputs((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    //handle submit click and verify data on firebase \r\n    const submitLogin = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (Object.keys(validateLoginForm(loginDetails)).length === 0) {\r\n            //handleSignin();\r\n            const authentication = getAuth();\r\n            signInWithEmailAndPassword(\r\n                authentication,\r\n                loginDetails.email,\r\n                loginDetails.password\r\n            )\r\n                .then((response) => {\r\n                    history.push('/overview/dashboard');\r\n                    sessionStorage.setItem(\r\n                        'token',\r\n                        response._tokenResponse.refreshToken\r\n                    );\r\n                    console.log(sessionStorage.getItem(\"token\"));\r\n                })\r\n                .catch((error) => {\r\n                    console.log('error', error);\r\n                    alert(\"No user found with entered email/password combination\");\r\n                });\r\n        } else {\r\n            setErrors(validateLoginForm(loginDetails));\r\n        }\r\n    };\r\n\r\n    //hide show password field\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    //clear text field \r\n    const handleClickClear = () => {\r\n        setLoginDetails((loginDetails) => ({\r\n            ...loginDetails,\r\n            email: '',\r\n        }));\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (token !== null && token) {\r\n    //         history.push('/overview/dashboard');\r\n    //     } else if (token === null) {\r\n    //         history.push('/');\r\n    //     }\r\n    // }, [token]);\r\n\r\n    //handle responsive \r\n    useEffect(() => {\r\n        if (width <= 576) {\r\n            setToggleMobile(true);\r\n        } else {\r\n            setToggleMobile(false);\r\n        }\r\n    }, [width, height]);\r\n\r\n    return (\r\n        <div className=\"loginContentCls\">\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                alignItems=\"center\"\r\n                className=\"height100Vh\"\r\n            >\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    lg={6}\r\n                    className=\"leftSideContent padding-t-200\"\r\n                >\r\n                    <img\r\n                        src=\"/assets/images/left_landing_page.svg\"\r\n                        alt=\"Limor Logo\"\r\n                        width=\"100%\"\r\n                    />\r\n                    <br />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                    <div className=\"rightFormContent\">\r\n                        <p className=\"text-24 fw-600\">Sign in</p>\r\n                        <p className=\"margin-t-0 text-grey\">\r\n                            Enter your email address and password\r\n                        </p>\r\n                        <TextField\r\n                            error={errorsValid.email ? true : false}\r\n                            name=\"email\"\r\n                            id=\"outlined-error\"\r\n                            label=\"Enter Email Address\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"doe@gmail.com\"\r\n                            className={classes.textInputCls}\r\n                            onChange={handleChange}\r\n                            value={loginDetails.email}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickClear}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {loginDetails.email ? (\r\n                                                <img\r\n                                                    src=\"/assets/icons/text-field-close.svg\"\r\n                                                    alt=\"Close\"\r\n                                                />\r\n                                            ) : null}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <div className=\"errorText text-12 float-left\">\r\n                            {errorsValid.email && errorsValid.email}\r\n                        </div>\r\n                        <TextField\r\n                            error={errorsValid.password ? true : false}\r\n                            label=\"Enter Password\"\r\n                            id=\"outlined-adornment-password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            name=\"password\"\r\n                            variant=\"outlined\"\r\n                            value={loginDetails.password}\r\n                            className={classes.textInputCls}\r\n                            onChange={handleChange}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? (\r\n                                                <img\r\n                                                    src=\"/assets/icons/eye.svg\"\r\n                                                    alt=\"Show\"\r\n                                                />\r\n                                            ) : (\r\n                                                <img\r\n                                                    src=\"/assets/icons/eye-slash.svg\"\r\n                                                    alt=\"Show\"\r\n                                                />\r\n                                            )}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <div className=\"errorText text-12 float-left\">\r\n                            {errorsValid.password && errorsValid.password}\r\n                        </div>\r\n                        <Grid container spacing={0}>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <CustomCheckbox\r\n                                            checked={toggleCheck.rememberMe}\r\n                                            onChange={handleChangeRemember}\r\n                                            name=\"rememberMe\"\r\n                                            iconStyle={{ fill: 'black' }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Remember Me\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6}></Grid>\r\n                        </Grid>\r\n                        <div className=\"margin-t-30\">\r\n                            <CustomButton\r\n                                btntype={\r\n                                    loginDetails.email && loginDetails.password\r\n                                        ? 'primaryBtn'\r\n                                        : 'disableBtn'\r\n                                }\r\n                                disabled={\r\n                                    loginDetails.email && loginDetails.password\r\n                                        ? false\r\n                                        : true\r\n                                }\r\n                                width=\"100%\"\r\n                                onClick={submitLogin}\r\n                            >\r\n                                Continue\r\n                            </CustomButton>\r\n                            <div className=\"text-center margin-tb-20\">\r\n                                <Link\r\n                                    to=\"/sign-up\"\r\n                                    className=\"cursor-pointer margin-t-10 text-primary\"\r\n                                >\r\n                                    Click here to Sign Up !\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        {errors.length > 0\r\n                            ? errors.map((error) => (\r\n                                  <p className=\"text-red text-center\">\r\n                                      {error}\r\n                                  </p>\r\n                              ))\r\n                            : null}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","/Users/simranjeet.dev/Documents/Adminpanel/src/providers/AuthProvider.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/utility/validations/login.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/firebase/authMethods.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/pages/Overview/DashboardPage/Dashboard.js",["142","143","144","145","146","147","148","149","150","151","152"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport Header from './../../../components/Header';\r\nimport Activities from '../../../components/Activities';\r\nimport { firebase } from './../../../firebase';\r\nimport {\r\n    getAuth,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n} from 'firebase/auth';\r\nimport {\r\n    getDatabase,\r\n    ref,\r\n    child,\r\n    onValue,\r\n    get,\r\n    getUser,\r\n} from 'firebase/database';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    overrideCls: {\r\n        marginTop: 22,\r\n    },\r\n    paperCls: {\r\n        padding: '10px 20px 20px 20px',\r\n        borderRadius: 10,\r\n        boxShadow: '0px 5px 40px rgba(0, 0, 0, 0.04)',\r\n    },\r\n    tabContainer: {\r\n        background: '#F0F3F8',\r\n        borderRadius: 10,\r\n        padding: 5,\r\n        marginTop: 20,\r\n        justifyContent: 'space-between',\r\n    },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n\r\n    const classes = useStyles();\r\n    //hook to set user details from firebase \r\n    const [getUserDetails, setUserDetails] = useState();\r\n\r\n    //fetch logged in user data as soon as page loads\r\n    useEffect(() => {\r\n        const auth = getAuth();\r\n        onAuthStateChanged(auth, (user) => {\r\n  \r\n            if (user) {\r\n                console.log(user);\r\n                setUserDetails(user);\r\n                // User is signed in, see docs for a list of available properties\r\n                // https://firebase.google.com/docs/reference/js/firebase.User\r\n                const uid = user.uid;\r\n                console.log(uid);\r\n\r\n                const userDetails = auth.currentUser;\r\n\r\n                if (userDetails) {\r\n                    console.log(userDetails);\r\n                    // User is signed in, see docs for a list of available properties\r\n                    // https://firebase.google.com/docs/reference/js/firebase.User\r\n                    // ...\r\n                } else {\r\n                    // No user is signed in.\r\n                }\r\n\r\n                // ...\r\n            } else {\r\n                // User is signed out\r\n                // ...\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    console.log('getUserDetails', getUserDetails);\r\n\r\n    return (\r\n        <div>\r\n            <Header title=\"Dashboard\" />\r\n\r\n            {getUserDetails && (\r\n                <div className=\"margin-t-30\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6} xl={4}>\r\n                            <Activities\r\n                                title=\"Email\"\r\n                                value={getUserDetails.email??\"N/A\"}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6} xl={4}>\r\n                            <Activities\r\n                                title=\"Email Verified\"\r\n                                value={getUserDetails.emailVerified?\"Verified\":\"Not Verified\"}\r\n                            />\r\n                        </Grid>\r\n                         \r\n                        <Grid item xs={12} sm={12} md={12} lg={6} xl={4}>\r\n                            <Activities\r\n                                title=\"User Id\"\r\n                                value={getUserDetails.providerData[0].uid??\"N/A\"}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6} xl={4}>\r\n                            <Activities\r\n                                title=\"Last Login\"\r\n                                value={getUserDetails.metadata.lastSignInTime??\"N/A\"}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","/Users/simranjeet.dev/Documents/Adminpanel/src/firebase/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/components/Buttons/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/components/WindowDimensions/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/pages/NewsPage/index.js",["153","154"],"import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport axios from 'axios';\nimport Activities from '../../components/Activities';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoadingSpinner from '../../components/loader/loader';\n\nconst useStyles = makeStyles((theme) => ({\n    paperCls: {\n        height: '100%',\n        padding: 20,\n        textAlign: 'center',\n    },\n}));\n\nconst NewsPage = () => {\n    const classes = useStyles();\n    const [getNewsDetails, setNewsDetails] = useState(null);\n    const [loading,isLoading]=useState(true)\n\n    //fetch news from newsapi as soon as page loads\n    useEffect(() => {\n        axios\n            .get(\n                'https://newsapi.org/v2/top-headlines?country=us&apiKey=7502218d123b407b92e37ee5c21c8b2f'\n            )\n            .then((res) => {\n                console.log('res', res);\n                if (res && res.data) {\n                    setNewsDetails(res.data.articles);\n                }\n                isLoading(false);\n            });\n    }, []);\n\n    return (\n       loading?LoadingSpinner(): <div>\n            <Header title=\"News\" />\n            {getNewsDetails && (\n                <Grid container spacing={3}>\n                    {getNewsDetails.map((news, index) => {\n                        return (\n                            <Grid item sm={12} md={6} lg={6}>\n                                <Paper className={classes.paperCls}>\n                                    <p>\n                                        <b>{news.title}</b>\n                                    </p>\n                                    <img src={news.urlToImage} width=\"100%\" />\n                                    <p>\n                                        Author: <b>{news.author}</b>\n                                    </p>\n                                </Paper>\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            )}\n        </div>\n    );\n};\n\nexport default NewsPage;\n","/Users/simranjeet.dev/Documents/Adminpanel/src/components/WindowPathname/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/pages/WeatherPage/index.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/components/SideBar/index.js",["155"],"import React, { useState, useEffect } from 'react';\r\nimport sideMenuList from './../../static/sideBarMenu.json';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useWindowsPathname from './../WindowPathname';\r\nimport { signOut } from \"firebase/auth\";\r\n\r\nconst SideBar = () => {\r\n    let history = useHistory();\r\n    const [getUrl] = useState(useWindowsPathname());\r\n    const [windowUrl, setWindowUrl] = useState('');\r\n\r\n    //handle click on menu item \r\n    const menuSelection = (e, data) => {\r\n        e.preventDefault();\r\n       \r\n        \r\n        if(data.redirectUrl ===\"/\"){\r\n            sessionStorage.setItem(\r\n                'token',\r\n               ''\r\n            );\r\n            history.push(data.redirectUrl);\r\n\r\n            return;\r\n        }\r\n        history.push(data.redirectUrl);\r\n        setWindowUrl(data.redirectUrl);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setWindowUrl(getUrl.pathname.pathname);\r\n    }, [getUrl]);\r\n\r\n    return (\r\n        <div className=\"sideMenuContentCls\">\r\n            {sideMenuList &&\r\n                sideMenuList.map((menu, id) => {\r\n                    return (\r\n                        <div key={id}>\r\n                            {menu.subMenus.map((data, index) => {\r\n                                return (\r\n                                    <p\r\n                                        key={index}\r\n                                        className={\r\n                                            windowUrl === data.redirectUrl\r\n                                                ? 'subTitle'\r\n                                                : 'subTitle'\r\n                                        }\r\n                                        onClick={(e) => menuSelection(e, data)}\r\n                                    >\r\n                                        <img\r\n                                            src={data.icons}\r\n                                            alt={menu.title}\r\n                                            className=\"iconCls\"\r\n                                        />\r\n                                        {data.title}\r\n                                    </p>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/UsersPage/index.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import React, { useState, useEffect } from 'react';\nimport { firebase } from './../../firebase';\nimport {\n    getAuth,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    onAuthStateChanged,\n} from 'firebase/auth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { getDatabase, ref, child, get } from 'firebase/database';\nimport Header from '../../components/Header';\nimport LoadingSpinner from '../../components/loader/loader';\nimport { Box, Card, Container } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n \n\n\n\nconst UsersPage = () => {\n        // hook to save user data from firebase in array\n    const [users,setUsers]=useState([])\n    // hook to handle loading spinner\n    const [loading,isLoading]=useState(true)\n\n    const classes = useStyles();\n    useEffect(() =>   {\n        fetchBlogs();\n     \n    }, []);\n    const fetchBlogs=async()=>{\n        const response=firebase.firestore().collection('users');\n        const data = await response.get();\n        var da=[];\n        data.docs.forEach(item=>{\n         console.log(JSON.stringify(item));\n        da.push(item.data());\n        })\n        setUsers(da);\n        isLoading(false);\n    }\n    return (\n        loading? LoadingSpinner(): <div>\n             <Box sx={{ m: 2 }} >\n                            <Header title=\"Users\" />\n\n             </Box>\n               \n\n             \n                <Box sx={{ m: 2 }} >\n                <div>\n                        {users.map((row) => (\n    <Box sx={{ m: 2 }} >\n  <Card sx={{ p: 10, m:10 }}>\n  <Box sx={{ m: 2 }} >\n  <h3>{row.fullname}</h3>\n                                   <h4>{row.email}</h4>\n\n  </Box>\n\n                                   \n                            </Card>\n    </Box>\n                          \n                           \n                        ))}\n                    </div></Box> \n                    \n                 \n             \n            \n        </div>\n    );\n};\n\nexport default UsersPage;\n","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/StockPage/index.js",["174","175"],"import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport axios from 'axios';\nimport Activities from '../../components/Activities';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoadingSpinner from '../../components/loader/loader';\n\nconst useStyles = makeStyles((theme) => ({\n    paperCls: {\n        height: '100%',\n        padding: 20,\n        textAlign: 'center',\n    },\n}));\n\n//fetch stocls from stocks api \nconst StockPage = () => {\n    const classes = useStyles();\n    // hook to save stocks data in object\n    const [getStockDetails, setStockDetails] = useState(null);\n    const [loading,isLoading]=useState(true)\n    useEffect(() => {\n        axios\n            .get(\n                'https://finnhub.io/api/v1/stock/symbol?exchange=US&token=cds1dgiad3i727sohqugcds1dgiad3i727sohqv0'\n            )\n            .then((res) => {\n                console.log('res', res);\n                if (res && res.data) {\n                    setStockDetails(res.data);\n                }\n                isLoading(false);\n            });\n    }, []);\n\n    return (\n        loading?LoadingSpinner(): <div>\n            <Header title=\"Stocks\" />\n            {getStockDetails && (\n                <Grid container spacing={3}>\n                    {getStockDetails.map((stock, index) => {\n                        if (index < 100) {\n                            return (\n                                <Grid item xs={12} sm={12} md={6} lg={6}>\n                                    <Paper className={classes.paperCls}>\n                                        <p>\n                                            <b>{stock.description}</b>\n                                        </p>\n                                        <p>{stock.currency}</p>\n                                        <p>{stock.displaySymbol}</p>\n                                        <p>\n                                            <b>{stock.type}</b>\n                                        </p>\n                                    </Paper>\n                                </Grid>\n                            );\n                        }\n                    })}\n                </Grid>\n            )}\n        </div>\n    );\n};\n\nexport default StockPage;\n","/Users/simranjeet.dev/Documents/Adminpanel/src/components/Activities/index.js",["176"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paperCls: {\r\n        height: '100%',\r\n        padding: 20,\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nconst Activities = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paperCls}>\r\n                <h2 className=\"table-col t-heading\">{props.title}</h2>\r\n                <h3 className=\"table-col t-heading\">{props.value}</h3>\r\n                <img src={props.imageUrl} width=\"100%\" />\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\nexport default Activities;\r\n","/Users/simranjeet.dev/Documents/Adminpanel/src/components/Header/index.js",["177","178","179","180","181","182","183","184","185"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { firebaseAuth } from './../../providers/AuthProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileInfo: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginRight: '10px',\r\n        alignItems: 'flex-end',\r\n    },\r\n    profileDetails: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: 60,\r\n        marginTop:30\r\n    },\r\n    profileImg: {\r\n        borderRadius: '12px',\r\n        marginRight: '20px',\r\n    },\r\n    rightArrowCls: {\r\n        position: 'relative',\r\n        top: 6,\r\n        marginRight: 12,\r\n        cursor: 'pointer',\r\n    },\r\n}));\r\n\r\nconst Header = ({ title, userDetails }) => {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const { handleSignout } = useContext(firebaseAuth);\r\n    const [userId, setUserId] = useState(0);\r\n\r\n    const handleLogout = () => {\r\n        //handleSignout();\r\n        history.push('/');\r\n    };\r\n\r\n    const navigationToLink = (url) => {\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <div className={classes.profileDetails}>\r\n                <div>\r\n                    <span className=\"text-24 fw-600\">{title}</span>\r\n                </div>\r\n                <div>\r\n               \r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.userDetails,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","/Users/simranjeet.dev/Documents/Adminpanel/src/components/loader/loader.jsx",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/TodoForm.js",[],"/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/useInputState.js",["186"],"import { useState } from 'react';\n\nexport default () => {\n  const [value, setValue] = useState('');\n\n  return {\n    value,\n    onChange: event => {\n      setValue(event.target.value);\n    },\n    reset: () => setValue('')\n  };\n};\n","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/index.js",["187","188"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Typography from '@material-ui/core/Typography';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport useTodoState from './useTodoState';\nimport './styles.css';\nimport Header from '../../components/Header';\nimport { Box } from '@material-ui/core';\n\nconst  TodoApp = () => {\n  const { todos, addTodo, deleteTodo } = useTodoState([]);\n\n  return (\n          <div className=\"App\">\n            <Box sx={{ m: 2 }} >\n                            <Header title=\"Todo's\" />\n\n             </Box>\n     <h3>Type and press enter to add to the list</h3>\n\n      <TodoForm\n        saveTodo={todoText => {\n          const trimmedText = todoText.trim();\n\n          if (trimmedText.length > 0) {\n            addTodo(trimmedText);\n          }\n        }}\n      />\n\n      <TodoList todos={todos} deleteTodo={deleteTodo} />\n    </div>\n  );\n};\n\nexport default TodoApp;\n","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/useTodoState.js",["189"],"import { useState } from 'react';\n\nexport default initialValue => {\n  const [todos, setTodos] = useState(initialValue);\n\n  return {\n    todos,\n    addTodo: todoText => {\n      setTodos([...todos, todoText]);\n    },\n    deleteTodo: todoIndex => {\n      const newTodos = todos.filter((_, index) => index !== todoIndex);\n\n      setTodos(newTodos);\n    }\n  };\n};\n","/Users/simranjeet.dev/Documents/Adminpanel/src/pages/todo/TodoList.js",[],{"ruleId":"190","severity":1,"message":"191","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":16},{"ruleId":"190","severity":1,"message":"194","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":15},{"ruleId":"190","severity":1,"message":"195","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":25},{"ruleId":"190","severity":1,"message":"196","line":17,"column":5,"nodeType":"192","messageId":"193","endLine":17,"endColumn":31},{"ruleId":"190","severity":1,"message":"197","line":74,"column":25,"nodeType":"192","messageId":"193","endLine":74,"endColumn":34},{"ruleId":"190","severity":1,"message":"198","line":78,"column":12,"nodeType":"192","messageId":"193","endLine":78,"endColumn":24},{"ruleId":"190","severity":1,"message":"199","line":79,"column":13,"nodeType":"192","messageId":"193","endLine":79,"endColumn":25},{"ruleId":"190","severity":1,"message":"200","line":79,"column":27,"nodeType":"192","messageId":"193","endLine":79,"endColumn":33},{"ruleId":"190","severity":1,"message":"201","line":79,"column":54,"nodeType":"192","messageId":"193","endLine":79,"endColumn":59},{"ruleId":"190","severity":1,"message":"202","line":14,"column":10,"nodeType":"192","messageId":"193","endLine":14,"endColumn":18},{"ruleId":"190","severity":1,"message":"203","line":18,"column":5,"nodeType":"192","messageId":"193","endLine":18,"endColumn":35},{"ruleId":"190","severity":1,"message":"198","line":74,"column":12,"nodeType":"192","messageId":"193","endLine":74,"endColumn":24},{"ruleId":"190","severity":1,"message":"204","line":75,"column":13,"nodeType":"192","messageId":"193","endLine":75,"endColumn":25},{"ruleId":"190","severity":1,"message":"200","line":75,"column":27,"nodeType":"192","messageId":"193","endLine":75,"endColumn":33},{"ruleId":"190","severity":1,"message":"201","line":75,"column":54,"nodeType":"192","messageId":"193","endLine":75,"endColumn":59},{"ruleId":"190","severity":1,"message":"205","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":13},{"ruleId":"190","severity":1,"message":"202","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":18},{"ruleId":"190","severity":1,"message":"196","line":10,"column":5,"nodeType":"192","messageId":"193","endLine":10,"endColumn":31},{"ruleId":"190","severity":1,"message":"203","line":11,"column":5,"nodeType":"192","messageId":"193","endLine":11,"endColumn":35},{"ruleId":"190","severity":1,"message":"206","line":15,"column":5,"nodeType":"192","messageId":"193","endLine":15,"endColumn":16},{"ruleId":"190","severity":1,"message":"207","line":16,"column":5,"nodeType":"192","messageId":"193","endLine":16,"endColumn":8},{"ruleId":"190","severity":1,"message":"208","line":17,"column":5,"nodeType":"192","messageId":"193","endLine":17,"endColumn":10},{"ruleId":"190","severity":1,"message":"209","line":18,"column":5,"nodeType":"192","messageId":"193","endLine":18,"endColumn":12},{"ruleId":"190","severity":1,"message":"210","line":19,"column":5,"nodeType":"192","messageId":"193","endLine":19,"endColumn":8},{"ruleId":"190","severity":1,"message":"211","line":20,"column":5,"nodeType":"192","messageId":"193","endLine":20,"endColumn":12},{"ruleId":"190","severity":1,"message":"212","line":43,"column":11,"nodeType":"192","messageId":"193","endLine":43,"endColumn":18},{"ruleId":"190","severity":1,"message":"213","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":50,"column":37,"nodeType":"216","endLine":50,"endColumn":79},{"ruleId":"190","severity":1,"message":"217","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":17},{"ruleId":"190","severity":1,"message":"218","line":4,"column":5,"nodeType":"192","messageId":"193","endLine":4,"endColumn":12},{"ruleId":"190","severity":1,"message":"196","line":5,"column":5,"nodeType":"192","messageId":"193","endLine":5,"endColumn":31},{"ruleId":"190","severity":1,"message":"203","line":6,"column":5,"nodeType":"192","messageId":"193","endLine":6,"endColumn":35},{"ruleId":"190","severity":1,"message":"219","line":7,"column":5,"nodeType":"192","messageId":"193","endLine":7,"endColumn":23},{"ruleId":"190","severity":1,"message":"220","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":13},{"ruleId":"190","severity":1,"message":"221","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":17},{"ruleId":"190","severity":1,"message":"222","line":12,"column":8,"nodeType":"192","messageId":"193","endLine":12,"endColumn":17},{"ruleId":"190","severity":1,"message":"223","line":13,"column":8,"nodeType":"192","messageId":"193","endLine":13,"endColumn":22},{"ruleId":"190","severity":1,"message":"224","line":14,"column":8,"nodeType":"192","messageId":"193","endLine":14,"endColumn":17},{"ruleId":"190","severity":1,"message":"225","line":15,"column":8,"nodeType":"192","messageId":"193","endLine":15,"endColumn":16},{"ruleId":"190","severity":1,"message":"226","line":16,"column":8,"nodeType":"192","messageId":"193","endLine":16,"endColumn":13},{"ruleId":"190","severity":1,"message":"206","line":17,"column":10,"nodeType":"192","messageId":"193","endLine":17,"endColumn":21},{"ruleId":"190","severity":1,"message":"207","line":17,"column":23,"nodeType":"192","messageId":"193","endLine":17,"endColumn":26},{"ruleId":"190","severity":1,"message":"208","line":17,"column":28,"nodeType":"192","messageId":"193","endLine":17,"endColumn":33},{"ruleId":"190","severity":1,"message":"210","line":17,"column":35,"nodeType":"192","messageId":"193","endLine":17,"endColumn":38},{"ruleId":"190","severity":1,"message":"227","line":20,"column":21,"nodeType":"192","messageId":"193","endLine":20,"endColumn":30},{"ruleId":"190","severity":1,"message":"228","line":28,"column":10,"nodeType":"192","messageId":"193","endLine":28,"endColumn":20},{"ruleId":"190","severity":1,"message":"212","line":41,"column":11,"nodeType":"192","messageId":"193","endLine":41,"endColumn":18},{"ruleId":"190","severity":1,"message":"213","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":43,"column":57,"nodeType":"231","messageId":"232","endLine":43,"endColumn":59},{"ruleId":"214","severity":1,"message":"215","line":20,"column":17,"nodeType":"216","endLine":20,"endColumn":58},{"ruleId":"190","severity":1,"message":"233","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"234","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"235","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":14},{"ruleId":"190","severity":1,"message":"236","line":36,"column":11,"nodeType":"192","messageId":"193","endLine":36,"endColumn":19},{"ruleId":"190","severity":1,"message":"237","line":38,"column":13,"nodeType":"192","messageId":"193","endLine":38,"endColumn":26},{"ruleId":"190","severity":1,"message":"238","line":39,"column":12,"nodeType":"192","messageId":"193","endLine":39,"endColumn":18},{"ruleId":"190","severity":1,"message":"239","line":39,"column":20,"nodeType":"192","messageId":"193","endLine":39,"endColumn":29},{"ruleId":"190","severity":1,"message":"240","line":41,"column":11,"nodeType":"192","messageId":"193","endLine":41,"endColumn":23},{"ruleId":"190","severity":1,"message":"241","line":46,"column":11,"nodeType":"192","messageId":"193","endLine":46,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":3,"column":1,"nodeType":"244","endLine":13,"endColumn":3},{"ruleId":"190","severity":1,"message":"245","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":16},{"ruleId":"190","severity":1,"message":"246","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":3,"column":1,"nodeType":"244","endLine":17,"endColumn":3},"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","'TodoApp' is defined but never used.","'validateLoginForm' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'setErrors' is assigned a value but never used.","'toggleMobile' is assigned a value but never used.","'handleSignup' is assigned a value but never used.","'inputs' is assigned a value but never used.","'token' is assigned a value but never used.","'firebase' is defined but never used.","'createUserWithEmailAndPassword' is defined but never used.","'handleSignin' is assigned a value but never used.","'axios' is defined but never used.","'getDatabase' is defined but never used.","'ref' is defined but never used.","'child' is defined but never used.","'onValue' is defined but never used.","'get' is defined but never used.","'getUser' is defined but never used.","'classes' is assigned a value but never used.","'Activities' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'signOut' is defined but never used.","'getAuth' is defined but never used.","'onAuthStateChanged' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'Container' is defined but never used.","'createData' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'Avatar' is defined but never used.","'Link' is defined but never used.","'location' is assigned a value but never used.","'handleSignout' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'navigationToLink' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ReactDOM' is defined but never used.","'Typography' is defined but never used."]